{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","Notification","type","message","classes","className","PersonForm","onAddPerson","useState","name","setName","number","setNumber","event","target","onClick","Person","person","onDeletePerson","id","window","confirm","Persons","persons","map","key","baseUrl","getAll","a","axios","get","allPersons","data","create","newObject","post","returnedObject","console","error","response","update","changedObject","put","updatedObject","remove","delete","App","setPersons","nameFilter","setNameFilter","ackMessage","setAckMessage","errorMessage","setErrorMessage","useEffect","personService","fetchData","addPerson","preventDefault","matchingPerson","find","p","shouldUpdate","newPerson","showMessage","updatedPerson","newPersons","filter","deletePerson","setMessage","setTimeout","filteredPersons","length","toLowerCase","includes","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af5de6cd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ type, message }) => {\n  const classes = `notification notification--${type}`;\n  return <>{message && <div className={classes}>{message}</div>}</>;\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\n\nconst PersonForm = ({ onAddPerson }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  return (\n    <form>\n      <div>\n        name: <input value={name} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button\n          type=\"submit\"\n          onClick={(event) => onAddPerson(event, name, number)}\n        >\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, onDeletePerson }) => {\n  const { id, name, number } = person;\n\n  const handleDeletePerson = () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      onDeletePerson(id, person.name);\n    }\n  };\n\n  return (\n    <p>\n      <strong>{name} </strong>\n      <span>{number} </span>\n      <button onClick={handleDeletePerson}>delete</button>\n    </p>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, onDeletePerson }) => {\n  return (\n    <div>\n      {persons.map((person) => (\n        <Person\n          key={person.id}\n          person={person}\n          onDeletePerson={onDeletePerson}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = async () => {\n  const { data: allPersons } = await axios.get(baseUrl);\n  return allPersons;\n};\n\nconst create = async (newObject) => {\n  try {\n    const { data: returnedObject } = await axios.post(baseUrl, newObject);\n    return returnedObject;\n  } catch (err) {\n    console.error(err.response.data.error);\n    return null;\n  }\n};\n\nconst update = async (changedObject) => {\n  try {\n    const { data: updatedObject } = await axios.put(\n      `${baseUrl}/${changedObject.id}`,\n      changedObject\n    );\n    return updatedObject;\n  } catch (err) {\n    console.error(err.response.data.error);\n    return null;\n  }\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [ackMessage, setAckMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await personService.getAll();\n        setPersons(data);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const addPerson = async (event, name, number) => {\n    event.preventDefault();\n    const matchingPerson = persons.find((p) => p.name === name);\n    let shouldUpdate = false;\n\n    if (matchingPerson) {\n      shouldUpdate = window.confirm(\n        `${name} is already added to phonebook, replace the old number with a new one?`\n      );\n    }\n\n    const newPerson = {\n      name,\n      number,\n    };\n\n    try {\n      if (!matchingPerson) {\n        const data = await personService.create(newPerson);\n        if (data) {\n          setPersons([...persons, data]);\n          showMessage(setAckMessage, `Added ${data.name}`);\n        }\n      } else if (matchingPerson && shouldUpdate) {\n        const updatedPerson = await personService.update({\n          ...matchingPerson,\n          number,\n        });\n        if (updatedPerson) {\n          const newPersons = persons.map((p) =>\n            p.id !== matchingPerson.id ? p : updatedPerson\n          );\n          setPersons(newPersons);\n          showMessage(setAckMessage, `Updated ${updatedPerson.name}'s number`);\n        }\n      }\n    } catch (err) {\n      // unfortunately handling error from update() here\n      // wanted to handle both cases in one place but noticed\n      // that it brings more pain than benefits\n      showMessage(\n        setErrorMessage,\n        `Information of ${name} has already been removed from server`\n      );\n      setPersons(persons.filter((p) => p.id !== matchingPerson.id));\n      console.error(err);\n    }\n  };\n\n  const deletePerson = async (id, name) => {\n    try {\n      await personService.remove(id);\n      const newPersons = persons.filter((p) => p.id !== id);\n      setPersons(newPersons);\n      showMessage(setAckMessage, `Deleted ${name}`);\n    } catch (e) {\n      showMessage(\n        setErrorMessage,\n        `Information of ${name} has already been removed from server`\n      );\n      setPersons(persons.filter((p) => p.id !== id));\n      console.error(e);\n    }\n  };\n\n  const showMessage = (setMessage, message) => {\n    setMessage(message);\n    setTimeout(() => setMessage(\"\"), 5000);\n  };\n\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value);\n  };\n\n  const filteredPersons =\n    nameFilter.length > 0\n      ? persons.filter(({ name }) =>\n          name.toLowerCase().includes(nameFilter.toLowerCase())\n        )\n      : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type=\"error\" message={errorMessage} />\n      <Notification type=\"ack\" message={ackMessage} />\n      <Filter value={nameFilter} onChange={handleNameFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm onAddPerson={addPerson} />\n      <h3>Numbers</h3>\n      <Persons persons={filteredPersons} onDeletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}